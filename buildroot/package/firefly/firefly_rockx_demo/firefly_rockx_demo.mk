FIREFLY_ROCKX_DEMO_VERSION = 1.0
FIREFLY_ROCKX_DEMO_SITE_METHOD = local
FIREFLY_ROCKX_DEMO_SITE = $(TOPDIR)/../app/firefly_rockx_demo
FIREFLY_ROCKX_DEMO_INSTALL_STAGING = YES 
FIREFLY_ROCKX_DEMO_INSTALL_TARGET = YES
FIREFLY_ROCKX_DEMO_DEPENDENCIES += rkmedia libcurl libgdbus librkdb dbserver libIPCProtocol minilogger rockx

ifeq ($(BR2_PACKAGE_OPENCV),y)
# The samples are using opencv instead of opencv3
FIREFLY_ROCKX_DEMO_DEPENDENCIES += opencv
else ifeq ($(BR2_PACKAGE_OPENCV3),y)
FIREFLY_ROCKX_DEMO_DEPENDENCIES += opencv3
else ifeq ($(BR2_PACKAGE_OPENCV4),y)
FIREFLY_ROCKX_DEMO_DEPENDENCIES += opencv4
endif

ifeq ($(BR2_PACKAGE_RKMEDIA_USE_AIQ), y)
FIREFLY_ROCKX_DEMO_DEPENDENCIES += camera_engine_rkaiq
FIREFLY_ROCKX_DEMO_CONF_OPTS += -DUSE_RKAIQ=ON
endif

ifeq ($(BR2_PACKAGE_DRM_DISPLAY_OUTPUT),y)
FIREFLY_ROCKX_DEMO_DEPENDENCIES += libdrm
FIREFLY_ROCKX_DEMO_CONF_OPTS += -DDRM_DISPLAY=ON
endif

ifeq ($(BR2_PACKAGE_RKMEDIA_RKRGA),y)
FIREFLY_ROCKX_DEMO_DEPENDENCIES += linux-rga
FIREFLY_ROCKX_DEMO_CONF_OPTS += -DRKRGA=ON
endif

ifeq ($(BR2_PACKAGE_RKMEDIA_MPP),y)
FIREFLY_ROCKX_DEMO_DEPENDENCIES += mpp
FIREFLY_ROCKX_DEMO_CONF_OPTS += -DRKMPP=ON \
        -DRKMPP_HEADER_DIR=$(STAGING_DIR)/usr/include/rockchip \
        -DRKMPP_LIB_NAME=rockchip_mpp
endif

ifeq ($(BR2_PACKAGE_RKMEDIA_V4L2_CAPTURE),y)
ifeq ($(BR2_PACKAGE_LIBV4L2),y)
FIREFLY_ROCKX_DEMO_DEPENDENCIES += libv4l
endif
FIREFLY_ROCKX_DEMO_CONF_OPTS += -DV4L2_CAPTURE=ON
endif

ifeq ($(BR2_PACKAGE_NETSERVER_SANITIZER_DYNAMIC), y)
FIREFLY_ROCKX_DEMO_CONF_OPTS += -DSANITIZER_DYNAMIC=ON
else

ifeq ($(BR2_PACKAGE_NETSERVER_SANITIZER_STATIC), y)
FIREFLY_ROCKX_DEMO_CONF_OPTS += -DSANITIZER_STATIC=ON
endif
endif

$(eval $(cmake-package))
